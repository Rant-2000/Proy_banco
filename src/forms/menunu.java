/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import clases.cliente;
import clases.cuenta;
import clases.transaccion;
import java.awt.Toolkit;
import java.net.MalformedURLException;
import java.rmi.Naming;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import rmiclases.interfazRemota;

/**
 *
 * @author Rant AA
 */
public class menunu extends javax.swing.JFrame {

    DefaultTableModel dtm1;
    DefaultTableModel dtm2;
    DefaultTableModel dtm3;
    String[][] cuent;

    /**
     * Creates new form menunu
     */
    public menunu() {
        initComponents();

        //Fecha
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
        txfechaform.setText(format1.format(cal.getTime()));
        txfechaform.setEditable(false);

        //--
        dtm1 = new DefaultTableModel();
        dtm2 = new DefaultTableModel();
        dtm3 = new DefaultTableModel();
        //Clientes
        String[] titulos1 = {"ID", "Nombre", "A.Paterno", "A. Materno", "Sexo", "Direccion", "Ciudad", "Colonia", "Correo"};
        dtm1.setColumnIdentifiers(titulos1);
        ListarClientes();
        //Cuentas
        String[] titulos2 = {"Cuenta", "ID.Cliente", "Cliente", "T.Cuenta", "Fecha Expedicion", "Saldo"};
        dtm2.setColumnIdentifiers(titulos2);
        ListarCuentas();
        //Transacciones
        String[] titulos3 = {"ID", "Nombre", "ID Transaccion", "Fecha", "Tipo T.", "Monto", "#Cuenta", "Tipo Cuenta"};
        dtm3.setColumnIdentifiers(titulos3);
        ListarTransa();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu2 = new javax.swing.JPopupMenu();
        Cuentas = new javax.swing.JMenu();
        CrearCuenta = new javax.swing.JMenuItem();
        CRUD = new javax.swing.JMenu();
        Eliminar = new javax.swing.JMenuItem();
        Modificar = new javax.swing.JMenuItem();
        Buscar = new javax.swing.JMenuItem();
        Agregar = new javax.swing.JMenuItem();
        transmenu = new javax.swing.JPopupMenu();
        depo = new javax.swing.JMenuItem();
        reti = new javax.swing.JMenuItem();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaclientes = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        cliagre = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txidcliente = new javax.swing.JTextField();
        txnomcli = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txappc = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txapmc = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txdircli = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txcicli = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txcolc = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txcorc = new javax.swing.JTextField();
        csexcli = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablacuentas = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        txncuenta = new javax.swing.JTextField();
        txidclicuentas = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txsaldo = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        cbtipocuenta = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        fechaex = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        lbldir = new javax.swing.JLabel();
        lblnom = new javax.swing.JLabel();
        lblape = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaTransa = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        txidtrans = new javax.swing.JTextField();
        txfetrans = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txnumcuentaTrans = new javax.swing.JTextField();
        txmontran = new javax.swing.JTextField();
        cbTipoTransacc = new javax.swing.JComboBox<>();
        cbTipoCueTrans = new javax.swing.JComboBox<>();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        cbnumcu = new javax.swing.JComboBox<>();
        txidt = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txfechaform = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();

        Cuentas.setText("Cuenta");
        Cuentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CuentasActionPerformed(evt);
            }
        });

        CrearCuenta.setText("Crear Cuenta");
        Cuentas.add(CrearCuenta);

        jPopupMenu2.add(Cuentas);

        CRUD.setText("CRUD");

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });
        CRUD.add(Eliminar);

        Modificar.setText("Modificar");
        Modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ModificarActionPerformed(evt);
            }
        });
        CRUD.add(Modificar);

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });
        CRUD.add(Buscar);

        Agregar.setText("Agregar");
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });
        CRUD.add(Agregar);

        jPopupMenu2.add(CRUD);

        depo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/add.png"))); // NOI18N
        depo.setText("Depositar");
        depo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depoActionPerformed(evt);
            }
        });
        transmenu.add(depo);

        reti.setText("Retirar");
        reti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retiActionPerformed(evt);
            }
        });
        transmenu.add(reti);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(28, 97, 140));
        jPanel2.setToolTipText("");
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });
        jScrollPane1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jScrollPane1PropertyChange(evt);
            }
        });

        tablaclientes.setBackground(new java.awt.Color(69, 169, 191));
        tablaclientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaclientes.setComponentPopupMenu(jPopupMenu2);
        tablaclientes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tablaclientesFocusGained(evt);
            }
        });
        tablaclientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaclientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaclientes);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 500, 290));

        jButton1.setBackground(new java.awt.Color(242, 203, 87));
        jButton1.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/bin.png"))); // NOI18N
        jButton1.setText("Eliminar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 120, -1));

        jButton2.setBackground(new java.awt.Color(242, 203, 87));
        jButton2.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/loupe.png"))); // NOI18N
        jButton2.setText("Buscar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 120, -1));

        jButton3.setBackground(new java.awt.Color(242, 203, 87));
        jButton3.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/write.png"))); // NOI18N
        jButton3.setText("Modificar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, -1));

        cliagre.setBackground(new java.awt.Color(242, 203, 87));
        cliagre.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        cliagre.setForeground(new java.awt.Color(0, 0, 0));
        cliagre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/add.png"))); // NOI18N
        cliagre.setText("Agregar");
        cliagre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cliagreActionPerformed(evt);
            }
        });
        jPanel2.add(cliagre, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 120, -1));

        jLabel1.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel1.setText("ID");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        txidcliente.setBackground(new java.awt.Color(69, 169, 191));
        txidcliente.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        txidcliente.setForeground(new java.awt.Color(0, 0, 0));
        txidcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txidclienteActionPerformed(evt);
            }
        });
        jPanel2.add(txidcliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 40, -1));

        txnomcli.setBackground(new java.awt.Color(69, 169, 191));
        txnomcli.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        txnomcli.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(txnomcli, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 80, -1));

        jLabel2.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel2.setText("Nombre");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        txappc.setBackground(new java.awt.Color(69, 169, 191));
        txappc.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        txappc.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(txappc, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, 80, -1));

        jLabel3.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel3.setText("A. Paterno");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, -1, -1));

        txapmc.setBackground(new java.awt.Color(69, 169, 191));
        txapmc.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        txapmc.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(txapmc, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 80, -1));

        jLabel4.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel4.setText("A. Materno");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, -1, -1));

        jLabel5.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel5.setText("Sexo");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, -1));

        jLabel6.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel6.setText("Direccion");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        txdircli.setBackground(new java.awt.Color(69, 169, 191));
        txdircli.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        txdircli.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(txdircli, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, 80, -1));

        jLabel7.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel7.setText("Ciudad");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, -1, -1));

        txcicli.setBackground(new java.awt.Color(69, 169, 191));
        txcicli.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        txcicli.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(txcicli, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 400, 110, -1));

        jLabel8.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel8.setText("Colonia");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, -1, -1));

        txcolc.setBackground(new java.awt.Color(69, 169, 191));
        txcolc.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        txcolc.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(txcolc, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 360, 100, -1));

        jLabel9.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel9.setText("Correo");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 360, -1, -1));

        txcorc.setBackground(new java.awt.Color(69, 169, 191));
        txcorc.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        txcorc.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(txcorc, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 360, 170, -1));

        csexcli.setBackground(new java.awt.Color(69, 169, 191));
        csexcli.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        csexcli.setForeground(new java.awt.Color(0, 0, 0));
        csexcli.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "M", "F" }));
        jPanel2.add(csexcli, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 340, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 470));

        jTabbedPane1.addTab("Clientes", jPanel1);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(28, 97, 140));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        tablacuentas.setBackground(new java.awt.Color(69, 169, 191));
        tablacuentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablacuentas.setComponentPopupMenu(transmenu);
        tablacuentas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablacuentasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablacuentas);

        jPanel5.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 450, 420));

        jButton5.setBackground(new java.awt.Color(242, 203, 87));
        jButton5.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(0, 0, 0));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/add.png"))); // NOI18N
        jButton5.setText("Agregar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jButton6.setBackground(new java.awt.Color(242, 203, 87));
        jButton6.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(0, 0, 0));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/bin.png"))); // NOI18N
        jButton6.setText("Eliminar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, -1, -1));

        jButton7.setBackground(new java.awt.Color(242, 203, 87));
        jButton7.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jButton7.setForeground(new java.awt.Color(0, 0, 0));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/loupe.png"))); // NOI18N
        jButton7.setText("Buscar");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jButton8.setBackground(new java.awt.Color(242, 203, 87));
        jButton8.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jButton8.setForeground(new java.awt.Color(0, 0, 0));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/write.png"))); // NOI18N
        jButton8.setText("Modificar");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, -1, -1));

        jLabel10.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel10.setText("# Cuenta");
        jPanel5.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 60, -1));

        txncuenta.setBackground(new java.awt.Color(69, 169, 191));
        txncuenta.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        txncuenta.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(txncuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, 60, -1));

        txidclicuentas.setBackground(new java.awt.Color(69, 169, 191));
        txidclicuentas.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        txidclicuentas.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(txidclicuentas, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 60, -1));

        jLabel11.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel11.setText("ID Cliente");
        jPanel5.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 80, -1));

        jLabel12.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel12.setText("Tipo Cuenta");
        jPanel5.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, 90, -1));

        txsaldo.setBackground(new java.awt.Color(69, 169, 191));
        txsaldo.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        txsaldo.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(txsaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 60, -1));

        jLabel14.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel14.setText("Saldo");
        jPanel5.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 40, -1));

        cbtipocuenta.setBackground(new java.awt.Color(69, 169, 191));
        cbtipocuenta.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        cbtipocuenta.setForeground(new java.awt.Color(0, 0, 0));
        cbtipocuenta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Ahorro", "Debito", "Credito" }));
        cbtipocuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbtipocuentaActionPerformed(evt);
            }
        });
        cbtipocuenta.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                cbtipocuentaPropertyChange(evt);
            }
        });
        jPanel5.add(cbtipocuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 240, 100, -1));

        jLabel22.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        jLabel22.setText("Fecha Expedicion");
        jPanel5.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        fechaex.setBackground(new java.awt.Color(69, 169, 191));
        fechaex.setFont(new java.awt.Font("Bodoni MT", 0, 14)); // NOI18N
        fechaex.setForeground(new java.awt.Color(0, 0, 0));
        jPanel5.add(fechaex, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 210, 90, -1));

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel23.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel23.setText("Nombre");
        jPanel7.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        jLabel24.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel24.setText("Apellidos");
        jPanel7.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        jLabel25.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel25.setText("Direccion");
        jPanel7.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        lbldir.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lbldir.setText("jLabel21");
        jPanel7.add(lbldir, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, -1, -1));

        lblnom.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblnom.setText("jLabel21");
        jPanel7.add(lblnom, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        lblape.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        lblape.setText("jLabel21");
        jPanel7.add(lblape, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, -1, -1));

        jPanel5.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 190, 100));

        jPanel3.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 460));

        jTabbedPane1.addTab("Cuentas", jPanel3);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(28, 97, 140));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tablaTransa.setBackground(new java.awt.Color(69, 169, 191));
        tablaTransa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaTransa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTransaMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaTransa);

        jPanel6.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 510, 370));

        jButton9.setBackground(new java.awt.Color(242, 203, 87));
        jButton9.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jButton9.setForeground(new java.awt.Color(0, 0, 0));
        jButton9.setText("Agregar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, -1, -1));

        jButton10.setBackground(new java.awt.Color(242, 203, 87));
        jButton10.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jButton10.setForeground(new java.awt.Color(0, 0, 0));
        jButton10.setText("Eliminar");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, -1, -1));

        jButton11.setBackground(new java.awt.Color(242, 203, 87));
        jButton11.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jButton11.setForeground(new java.awt.Color(0, 0, 0));
        jButton11.setText("Buscar Transaccion");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        jButton12.setBackground(new java.awt.Color(242, 203, 87));
        jButton12.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jButton12.setForeground(new java.awt.Color(0, 0, 0));
        jButton12.setText("Modificar");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, -1, -1));

        jLabel15.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jLabel15.setText("ID Transaccion");
        jPanel6.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        txidtrans.setBackground(new java.awt.Color(69, 169, 191));
        txidtrans.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        txidtrans.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(txidtrans, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 60, -1));

        txfetrans.setBackground(new java.awt.Color(69, 169, 191));
        txfetrans.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        txfetrans.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(txfetrans, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 70, -1));

        jLabel17.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jLabel17.setText("Fecha T.");
        jPanel6.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, 20));

        jLabel18.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jLabel18.setText("Tipo. T.");
        jPanel6.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, 20));

        jLabel19.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jLabel19.setText("Monto");
        jPanel6.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, -1, 20));

        jLabel20.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jLabel20.setText("# Cuenta");
        jPanel6.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, -1, -1));

        txnumcuentaTrans.setBackground(new java.awt.Color(69, 169, 191));
        txnumcuentaTrans.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        txnumcuentaTrans.setForeground(new java.awt.Color(0, 0, 0));
        txnumcuentaTrans.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txnumcuentaTransInputMethodTextChanged(evt);
            }
        });
        txnumcuentaTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txnumcuentaTransActionPerformed(evt);
            }
        });
        txnumcuentaTrans.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txnumcuentaTransPropertyChange(evt);
            }
        });
        jPanel6.add(txnumcuentaTrans, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 420, 70, -1));

        txmontran.setBackground(new java.awt.Color(69, 169, 191));
        txmontran.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        txmontran.setForeground(new java.awt.Color(0, 0, 0));
        jPanel6.add(txmontran, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, 70, -1));

        cbTipoTransacc.setBackground(new java.awt.Color(69, 169, 191));
        cbTipoTransacc.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        cbTipoTransacc.setForeground(new java.awt.Color(0, 0, 0));
        cbTipoTransacc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione", "Deposito/APERTURA", "Deposito", "RETIRO" }));
        cbTipoTransacc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoTransaccActionPerformed(evt);
            }
        });
        jPanel6.add(cbTipoTransacc, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, 100, 30));

        cbTipoCueTrans.setBackground(new java.awt.Color(69, 169, 191));
        cbTipoCueTrans.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        cbTipoCueTrans.setForeground(new java.awt.Color(0, 0, 0));
        cbTipoCueTrans.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo Cuenta", "Ahorro", "Debito", "Credito" }));
        cbTipoCueTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTipoCueTransActionPerformed(evt);
            }
        });
        jPanel6.add(cbTipoCueTrans, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, 150, -1));

        jButton13.setBackground(new java.awt.Color(242, 203, 87));
        jButton13.setFont(new java.awt.Font("Bodoni MT", 1, 14)); // NOI18N
        jButton13.setForeground(new java.awt.Color(0, 0, 0));
        jButton13.setText("Consultar # Cuenta");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        jButton14.setBackground(new java.awt.Color(69, 169, 191));
        jButton14.setText("Refrescar");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 0, -1, -1));

        jButton15.setBackground(new java.awt.Color(255, 102, 51));
        jButton15.setFont(new java.awt.Font("Consolas", 0, 24)); // NOI18N
        jButton15.setText("Consultas");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, 290, 30));

        cbnumcu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbnumcu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbnumcuActionPerformed(evt);
            }
        });
        jPanel6.add(cbnumcu, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 150, -1));

        txidt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txidtActionPerformed(evt);
            }
        });
        jPanel6.add(txidt, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 320, 60, -1));

        jLabel16.setText("ID Cliente");
        jPanel6.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        jPanel4.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 700, 470));

        jTabbedPane1.addTab("Transacciones", jPanel4);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 700, 500));
        getContentPane().add(txfechaform, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, 80, -1));

        jLabel13.setText("Fecha");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cliagreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cliagreActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            int idcliente;
            String nom, app, apm, sex, dir, ci, col, cor;
            if (txidcliente.getText().equals("")) {
                idcliente = 0;
            } else {
                idcliente = Integer.parseInt(txidcliente.getText());
            }
            nom = txnomcli.getText();
            app = txappc.getText();
            apm = txapmc.getText();
            sex = csexcli.getSelectedItem().toString();
            dir = txdircli.getText();
            ci = txcicli.getText();
            col = txcolc.getText();
            cor = txcorc.getText();
            cliente nuevo = new cliente(nom, app, apm, sex, dir, ci, col, cor, idcliente);
            if (obje.AgregarCliente(nuevo)) {
                System.out.println("Agregado");
                ListarClientes();
                ListarCuentas();
                validarCuentas(idcliente);
                ListarTransa();
                Toolkit.getDefaultToolkit().beep();

            } else {
                System.out.println("No se agrego");
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_cliagreActionPerformed

    private void txidclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txidclienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txidclienteActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            int idcliente;
            String nom, app, apm, sex, dir, ci, col, cor;
            if (txidcliente.getText().equals("")) {
                idcliente = 0;
            } else {
                idcliente = Integer.parseInt(txidcliente.getText());
            }
            nom = txnomcli.getText();
            app = txappc.getText();
            apm = txapmc.getText();
            sex = csexcli.getSelectedItem().toString();
            dir = txdircli.getText();
            ci = txcicli.getText();
            col = txcolc.getText();
            cor = txcorc.getText();
            cliente nuevo = new cliente(nom, app, apm, sex, dir, ci, col, cor, idcliente);
            if (obje.ModiCliente(nuevo)) {
                System.out.println("Modificado");
                ListarClientes();
            } else {
                System.out.println("No se modifico");
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tablaclientesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tablaclientesFocusGained
        System.out.println(tablaclientes.getSelectedRow());
    }//GEN-LAST:event_tablaclientesFocusGained

    private void jScrollPane1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jScrollPane1PropertyChange

    }//GEN-LAST:event_jScrollPane1PropertyChange

    private void tablaclientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaclientesMouseClicked

        int fila = tablaclientes.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No se a seleccionado ninguna fila");
        } else {
            int ide = Integer.parseInt((String) tablaclientes.getValueAt(fila, 0).toString());
            String nom = tablaclientes.getValueAt(tablaclientes.getSelectedRow(), 1).toString();
            String app = tablaclientes.getValueAt(tablaclientes.getSelectedRow(), 2).toString();
            String apm = tablaclientes.getValueAt(tablaclientes.getSelectedRow(), 3).toString();
            String sex = tablaclientes.getValueAt(tablaclientes.getSelectedRow(), 4).toString();
            String dir = tablaclientes.getValueAt(tablaclientes.getSelectedRow(), 5).toString();
            String cid = tablaclientes.getValueAt(tablaclientes.getSelectedRow(), 6).toString();
            String col = tablaclientes.getValueAt(tablaclientes.getSelectedRow(), 7).toString();
            String cor = tablaclientes.getValueAt(tablaclientes.getSelectedRow(), 8).toString();
            txidcliente.setText("" + String.valueOf(ide));
            txnomcli.setText("" + nom);
            txappc.setText("" + app);
            txapmc.setText("" + apm);
            if (sex.equals("M")) {
                csexcli.setSelectedIndex(1);
            } else {
                csexcli.setSelectedIndex(2);
            }
            txdircli.setText("" + dir);
            txcicli.setText("" + cid);
            txcolc.setText("" + col);
            txcorc.setText("" + cor);
            txidclicuentas.setText(tablaclientes.getValueAt(fila, 0).toString());
            validarCuentas(ide);
            lblnom.setText(nom);
            lblape.setText(app + " " + apm);
            lbldir.setText(dir);
            //String[] titulos1 = {"ID", "Nombre", "A.Paterno", "A. Materno", "Sexo", "Direccion", "Ciudad", "Colonia", "Correo"};    
        }


    }//GEN-LAST:event_tablaclientesMouseClicked
    public void validarCuentas(int idcliente) {
        String[] numcuentas = new String[tablacuentas.getRowCount()];
        String[] numcli = new String[tablaclientes.getRowCount()];

        for (int i = 0; i < tablacuentas.getRowCount(); i++) {
            numcuentas[i] = tablacuentas.getValueAt(i, 0).toString();
        }

        for (int i = 0; i < tablaclientes.getRowCount(); i++) {
            numcli[i] = tablaclientes.getValueAt(i, 0).toString();
        }
        DefaultComboBoxModel elicombo = new DefaultComboBoxModel();
        elicombo.addElement("Selecciona");

        boolean ahorroexiste = false;
        boolean debitoexiste = false;
        boolean creditoexiste = false;
        for (int i = 0; i < tablacuentas.getRowCount(); i++) {

            System.out.println("");
            String[] nc = numcuentas[i].split("0");
            String tipocuentass = nc[nc.length - 1];

            String idcliente2;

            idcliente2 = numcuentas[i].substring(0, numcuentas[i].length() - 2);

            int idclientefinal = Integer.parseInt(idcliente2);

            if (idcliente == idclientefinal) {

                if (tipocuentass.equals("1")) {

                    ahorroexiste = true;
                }
                if (tipocuentass.equals("2")) {

                    debitoexiste = true;
                }
                if (tipocuentass.equals("3")) {

                    creditoexiste = true;
                }

            }

        }
        if (ahorroexiste == false) {
            elicombo.addElement("Ahorro");
        }
        if (debitoexiste == false) {
            elicombo.addElement("Debito");
        }
        if (creditoexiste == false) {
            elicombo.addElement("Credito");
        }

        cbtipocuenta.setModel(elicombo);

    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            int idcliente;

            if (txidcliente.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debes ingresar un id");
            } else {
                idcliente = Integer.parseInt(txidcliente.getText());
                cliente c = obje.busInCli(idcliente);
                Toolkit.getDefaultToolkit().beep();
                JOptionPane.showMessageDialog(null, "ID" + c.getIdcliente()
                        + "\n Nombre: " + c.getNom()
                        + "\n Apellidos: " + c.getApp() + " " + c.getApm()
                        + "\n Genero: " + c.getSex()
                        + "\n Direcion: " + c.getDir()
                        + "\n Ciudad: " + c.getCiudad()
                        + "\n Colonia: " + c.getCol()
                        + "\n Correo: " + c.getCorreo());

            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            int idcliente;

            if (txidcliente.getText().equals("")) {
                idcliente = 0;
            } else {
                idcliente = Integer.parseInt(txidcliente.getText());
            }
            cliente n = new cliente();
            n.setIdcliente(idcliente);
            if (obje.ElimCli(n)) {
                System.out.println("Eliminado");
                ListarClientes();
                ListarCuentas();
                ListarTransa();
               
            } else {
                System.out.println("No se elimino");
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked

    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            int idcuenta, txidclicuenta, tipocuenta=0;
            double saldo;
            if (txncuenta.getText().equals("")) {
                idcuenta = 0;
            } else {
                idcuenta = Integer.parseInt(txncuenta.getText());
            }
            txidclicuenta = Integer.parseInt(txidclicuentas.getText());
            if (cbtipocuenta.getSelectedItem().toString().equals("Ahorro")) {
                tipocuenta = 1;
            }
            if (cbtipocuenta.getSelectedItem().toString().equals("Debito")) {
                tipocuenta = 2;
            }
            if (cbtipocuenta.getSelectedItem().toString().equals("Credito")) {
                tipocuenta = 3;
            }
            saldo = Double.parseDouble(txsaldo.getText());
            if (saldo < 1000) {
                JOptionPane.showMessageDialog(null, "La apertura por cuenta debe ser de minimo 1000");
            } else {
                cuenta nuevo = new cuenta();
                Calendar cal = Calendar.getInstance();
                SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");
                nuevo.setFechaCreacion(format1.format(cal.getTime()));

                nuevo.setNumCuenta(idcuenta);
                nuevo.setIdcliente(txidclicuenta);
                nuevo.setIdtipocuenta(tipocuenta);
                nuevo.setSaldo(0);

                transaccion ntran = new transaccion();
                ntran.setMonto(saldo);
                ntran.setIdtran(-1);
                ntran.setNumcuenta(idcuenta);
                ntran.setTipoTrans("Deposito/APERTURA");
                ntran.setFechaTrans(txfechaform.getText());
                //(idt int,nc int,tt varchar(30),ft date,monto double,tipoTran int)

                if (obje.AgregarCuenta(nuevo)) {
                    System.out.println("Agregado");
                    obje.AgregarTransa(ntran, 0);
                    ListarCuentas();
                    validarCuentas(idcuenta);
                } else {
                    JOptionPane.showMessageDialog(null, "No se agrego, no existe");
                    System.out.println("No se agrego");
                }
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            int numcuenta = 0, idcliente = 0, idtipocliente = 0;
            String fecha;
            double saldo;
            if (txncuenta.getText().equals("")) {
                idcliente = 0;
            } else {
                numcuenta = Integer.parseInt(txncuenta.getText());
                idcliente = Integer.parseInt(txidclicuentas.getText());
                idtipocliente = cbtipocuenta.getSelectedIndex();
            }
            saldo = Double.parseDouble(txsaldo.getText());
            Calendar cal = Calendar.getInstance();
            SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");

            cuenta n = new cuenta();
            n.setFechaCreacion(format1.format(cal.getTime()));
            n.setNumCuenta(numcuenta);
            n.setIdcliente(idcliente);
            n.setIdtipocuenta(idtipocliente);
            n.setSaldo(saldo);
            if (obje.ModiCuenta(n)) {
                System.out.println("Modificado");
                ListarCuentas();
            } else {
                System.out.println("No se modifico");
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            int idcuenta;

            if (txncuenta.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debes introducir Numero de cuenta");
                txncuenta.requestFocus();
            } else {
                idcuenta = Integer.parseInt(txncuenta.getText());
                cuenta c = obje.busCuIn(idcuenta);
                JOptionPane.showMessageDialog(null, "#Cuenta: " + c.getNumCuenta()
                        + "\n idCliente: " + c.getIdcliente()
                        + "\n Titular: " + c.getNombreC()
                        + "\n Tipo Cuenta: " + c.getDesC()
                        + "\n Fecha Exp.: " + c.getFechaCreacion()
                        + "\n Saldo: " + c.getSaldo());
            }
//String[] titulos2 = {"Cuenta", "ID.Cliente", "Cliente", "T.Cuenta", "Fecha Expedicion", "Saldo"};

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            int numcuenta;

            if (txncuenta.getText().equals("")) {
                numcuenta = 0;
            } else {
                numcuenta = Integer.parseInt(txncuenta.getText());
            }
            cuenta n = new cuenta();
            n.setNumCuenta(numcuenta);
            if (obje.haySaldo(numcuenta) == 0) {
                if (obje.ElimCuenta(n)) {
                    System.out.println("Eliminado");
                    ListarCuentas();
                }
            } else {
                if (obje.haySaldo(numcuenta) == 1) {
                    System.out.println("Debe tener el saldo en 0");
                } else {
                    System.out.println("Error");
                }
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked

    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void tablacuentasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablacuentasMouseClicked
        int fila = tablacuentas.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No se a seleccionado ninguna fila");
        } else {
            DefaultComboBoxModel dcm =new DefaultComboBoxModel();
            dcm.addElement("Selecciona");
            dcm.addElement("Ahorro");
            dcm.addElement("Debito");
            dcm.addElement("Credito");
            cbtipocuenta.setModel(dcm);
            //String[] titulos2 = {"Cuenta", "ID.Cliente", "Cliente", "T.Cuenta", "Fecha Expedicion", "Saldo"};
            int numcuentas = Integer.parseInt((String) tablacuentas.getValueAt(fila, 0).toString());
            int idcliente = Integer.parseInt((String) tablacuentas.getValueAt(fila, 1).toString());
            String clientenom = tablacuentas.getValueAt(tablacuentas.getSelectedRow(), 2).toString();
            String TipoCuenta = tablacuentas.getValueAt(tablacuentas.getSelectedRow(), 3).toString();
            String fechaExp = tablacuentas.getValueAt(tablacuentas.getSelectedRow(), 4).toString();
            double saldoCuenta = Double.parseDouble(tablacuentas.getValueAt(tablacuentas.getSelectedRow(), 5).toString());
            txncuenta.setText(String.valueOf(numcuentas));
            txidclicuentas.setText(String.valueOf(idcliente));
            txsaldo.setText(String.valueOf(saldoCuenta));
            fechaex.setText(fechaExp);
            if (TipoCuenta.equals("Ahorro")) {
                cbtipocuenta.setSelectedIndex(1);
            }
            if (TipoCuenta.equals("Debito")) {
                cbtipocuenta.setSelectedIndex(2);
            }
            if (TipoCuenta.equals("Credito")) {
                cbtipocuenta.setSelectedIndex(3);
            }
            txidt.setText((String) tablacuentas.getValueAt(fila, 1).toString());

        }
    }//GEN-LAST:event_tablacuentasMouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            transaccion t = new transaccion();
            if (!txidtrans.getText().equals("")) {
                t.setIdtran(Integer.parseInt(txidtrans.getText()));
            } else {
                t.setIdtran(0);
            }

            if (txfetrans.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Se usara la fecha actual");
                Calendar cal = Calendar.getInstance();
                SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");

                t.setFechaTrans(format1.format(cal.getTime()));
            } else {
                t.setFechaTrans(txfetrans.getText());
            }
            if (cbTipoTransacc.getSelectedIndex() <= 0) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una operacion");
            } else {
                t.setTipoTrans(cbTipoTransacc.getSelectedItem().toString());
            }
            if (cbTipoTransacc.getSelectedIndex() == 3) {
                t.setTipoTrans(cbTipoTransacc.getSelectedItem().toString());

            }
            int tipo = 0;
            if (cbTipoTransacc.getSelectedIndex() > 0 && cbTipoTransacc.getSelectedIndex() < 3) {
                tipo = 0;
            }
            if (cbTipoTransacc.getSelectedIndex() == 3) {
                tipo = 1;
            }
            t.setMonto(Double.parseDouble(txmontran.getText()));
            t.setNumcuenta(Integer.parseInt(txnumcuentaTrans.getText()));
            t.setTipocuenta(cbTipoCueTrans.getSelectedIndex());
            if (obje.AgregarTransa(t, tipo)) {
                System.out.println("Agregado");
                ListarTransa();
                ListarCuentas();
            } else {
                System.out.println("No se agrego");
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void txnumcuentaTransInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txnumcuentaTransInputMethodTextChanged

    }//GEN-LAST:event_txnumcuentaTransInputMethodTextChanged

    private void txnumcuentaTransPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txnumcuentaTransPropertyChange
    }//GEN-LAST:event_txnumcuentaTransPropertyChange

    private void txnumcuentaTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txnumcuentaTransActionPerformed


    }//GEN-LAST:event_txnumcuentaTransActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            int numcuenta;
            transaccion n = new transaccion();
            // String[] titulos3 = {"ID", "Nombre", "ID Transaccion", "Fecha", "Tipo T.", "Monto", "#Cuenta", "Tipo Cuenta", "Descripcion"};

            if (txidtrans.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debes tener un id Transaccion");
                //error
            } else {
                numcuenta = Integer.parseInt(txidtrans.getText());

                transaccion t = obje.busTranIn(numcuenta);
                JOptionPane.showMessageDialog(null, "ID Cliente: " + t.getIdclie()
                        + "\n Cliente: " + t.getNom()
                        + "\n ID Transaccion: " + t.getIdtran()
                        + "\n Fecha: " + t.getFechaTrans()
                        + "\n Tipo Transaccion: " + t.getTipoTrans()
                        + "\n Monto: " + t.getMonto()
                        + "\n # Cuenta: " + t.getNumcuenta()
                        //   + "\n ID Tipo Cuenta: " + t.getTipocuenta()
                        + "\n Tipo Cuenta: " + t.getDes());

            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            int numcuenta;
            transaccion n = new transaccion();
            if (txidtrans.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debes tener un id Transaccion");
                //error
            } else {
                numcuenta = Integer.parseInt(txidtrans.getText());
                n.setIdtran(numcuenta);
                if (obje.ElimTransa(n)) {
                    System.out.println("Eliminado");
                    ListarTransa();
                    ListarCuentas();
                } else {
                    System.out.println("No se elimino");
                }
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            transaccion t = new transaccion();

            if (txfetrans.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Se usara la fecha actual");
                Calendar cal = Calendar.getInstance();
                SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");

                t.setFechaTrans(format1.format(cal.getTime()));
            } else {
                System.out.println("Tiene fecha");
                t.setFechaTrans(txfetrans.getText());
                System.out.println(t.getFechaTrans());
            }

            t.setNumcuenta(Integer.parseInt(txnumcuentaTrans.getText()));
            t.setTipoTrans(cbTipoTransacc.getSelectedItem().toString());
            int tipo = -1;
            if (cbTipoTransacc.getSelectedIndex() > 0) {
                if (cbTipoTransacc.getSelectedIndex() == 1 || cbTipoTransacc.getSelectedIndex() == 2) {
                    tipo = 0;
                }
                if (cbTipoTransacc.getSelectedIndex() == 3) {
                    tipo = 1;
                }
            }
            t.setMonto(Double.parseDouble(txmontran.getText()));
            t.setNumcuenta(Integer.parseInt(txnumcuentaTrans.getText()));
            t.setTipocuenta(cbTipoCueTrans.getSelectedIndex());
            t.setIdtran(Integer.parseInt(txidtrans.getText()));
            if (obje.ModiTransa(t, tipo)) {
                System.out.println("Modificado");
                ListarTransa();
                ListarCuentas();
            } else {
                System.out.println("No se modifica");
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void tablaTransaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTransaMouseClicked
        int fila = tablaTransa.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "No se a seleccionado ninguna fila");
        } else {
            //String[] titulos3 = {"ID", "Nombre", "ID Transaccion", "Fecha", "Tipo T.", "Monto", "#Cuenta", "Tipo Cuenta", "Descripcion"};
            txidtrans.setText(tablaTransa.getValueAt(tablaTransa.getSelectedRow(), 2).toString());
            txfetrans.setText(tablaTransa.getValueAt(tablaTransa.getSelectedRow(), 3).toString());
            cbTipoTransacc.setSelectedItem(tablaTransa.getValueAt(tablaTransa.getSelectedRow(), 4).toString());
            txmontran.setText(tablaTransa.getValueAt(tablaTransa.getSelectedRow(), 5).toString());
            txnumcuentaTrans.setText(tablaTransa.getValueAt(tablaTransa.getSelectedRow(), 6).toString());
            cbTipoCueTrans.setSelectedItem(tablaTransa.getValueAt(tablaTransa.getSelectedRow(), 7).toString());
            // txidclitrans.setText(tablaTransa.getValueAt(tablaTransa.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tablaTransaMouseClicked
    }
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        ListarTransaCuenta();

    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        ListarTransa();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void cbTipoTransaccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoTransaccActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTipoTransaccActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        Consulta c = new Consulta();
        c.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        c.setVisible(true);

    }//GEN-LAST:event_jButton15ActionPerformed
    String[] tcpc = null;
    private void txidtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txidtActionPerformed
        try {

            int numc = Integer.parseInt(txidt.getText());
            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            ArrayList<cuenta> lista = obje.con6(numc);

            String cuentas = "Seleccione,";
            String tcuentas = ",";
            for (int i = 0; i < lista.size(); i++) {

                cuent[0][i] = String.valueOf(lista.get(i).getIdtipocuenta());
                cuent[1][i] = String.valueOf(lista.get(i).getIdcliente());
                cuent[2][i] = String.valueOf(lista.get(i).getNumCuenta());

                cuentas += String.valueOf(lista.get(i).getNumCuenta() + ",");
                tcuentas += String.valueOf(lista.get(i).getIdtipocuenta()) + ",";
            }
            String[] ncu = cuentas.split(",");
            String[] tic = tcuentas.split(",");
            //   tcpc=new String[tic.length];
            tcpc = tic;
            DefaultComboBoxModel dcm = new DefaultComboBoxModel();
            for (int i = 0; i < ncu.length; i++) {
                dcm.addElement(ncu[i].toString());
            }
            cbnumcu.setModel(dcm);

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_txidtActionPerformed

    private void cbnumcuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbnumcuActionPerformed
        if (cbnumcu.getSelectedIndex() > 0) {
            txnumcuentaTrans.setText(cbnumcu.getSelectedItem().toString());
            String nc = cbnumcu.getSelectedItem().toString();
            int ncuu = Integer.parseInt(nc.substring(nc.length() - 1));
            cbTipoCueTrans.setSelectedIndex(ncuu);
        } else {
            txnumcuentaTrans.setText("");
            cbTipoCueTrans.setSelectedIndex(0);
        }
    }//GEN-LAST:event_cbnumcuActionPerformed

    private void cbTipoCueTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTipoCueTransActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbTipoCueTransActionPerformed

    private void cbtipocuentaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_cbtipocuentaPropertyChange

    }//GEN-LAST:event_cbtipocuentaPropertyChange

    private void cbtipocuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbtipocuentaActionPerformed
        int tc = cbtipocuenta.getSelectedIndex();
        if (tc == -1 || tc == 0) {
            // System.out.println("no es posible asdas");
        } else {
            if (cbtipocuenta.getSelectedItem().toString().equals("Ahorro")) {
                // System.out.println(tc);
                txncuenta.setText(txidclicuentas.getText() + "01");
            }
            if (cbtipocuenta.getSelectedItem().toString().equals("Debito")) {
                // System.out.println(tc);
                txncuenta.setText(txidclicuentas.getText() + "02");
            }
            if (cbtipocuenta.getSelectedItem().toString().equals("Credito")) {
                // System.out.println(tc);
                txncuenta.setText(txidclicuentas.getText() + "03");
            }

        }
    }//GEN-LAST:event_cbtipocuentaActionPerformed

    private void CuentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CuentasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CuentasActionPerformed

    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed
        try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            if (tablaclientes.getSelectedRow() >= 0) {
                int idcliente = Integer.parseInt(tablaclientes.getValueAt(tablaclientes.getSelectedRow(), 0).toString());

                cliente n = new cliente();
                n.setIdcliente(idcliente);
                if (obje.ElimCli(n)) {
                    System.out.println("Eliminado");
                    ListarClientes();
                } else {
                    System.out.println("No se elimino");
                }
            } else {
                JOptionPane.showMessageDialog(null, "selecciona un renglon primero");
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_EliminarActionPerformed

    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        try {
            if (tablaclientes.getSelectedRow() >= 0) {
                interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");

                int idcliente = Integer.parseInt(tablaclientes.getValueAt(tablaclientes.getSelectedRow(), 0).toString());

                cliente c = obje.busInCli(idcliente);
                JOptionPane.showMessageDialog(null, "ID" + c.getIdcliente()
                        + "\n Nombre: " + c.getNom()
                        + "\n Apellidos: " + c.getApp() + " " + c.getApm()
                        + "\n Genero: " + c.getSex()
                        + "\n Direcion: " + c.getDir()
                        + "\n Ciudad: " + c.getCiudad()
                        + "\n Colonia: " + c.getCol()
                        + "\n Correo: " + c.getCorreo());

            } else {
                JOptionPane.showMessageDialog(null, "selecciona un renglon primero");
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }//GEN-LAST:event_BuscarActionPerformed

    private void ModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ModificarActionPerformed
        /*       try {

            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            int idcliente;
            String nom, app, apm, sex, dir, ci, col, cor;
            if (txidcliente.getText().equals("")) {
                idcliente = 0;
            } else {
                idcliente = Integer.parseInt(txidcliente.getText());
            }
            nom = txnomcli.getText();
            app = txappc.getText();
            apm = txapmc.getText();
            sex = csexcli.getSelectedItem().toString();
            dir = txdircli.getText();
            ci = txcicli.getText();
            col = txcolc.getText();
            cor = txcorc.getText();
            cliente nuevo = new cliente(nom, app, apm, sex, dir, ci, col, cor, idcliente);
            if (obje.ModiCliente(nuevo)) {
                System.out.println("Modificado");
                ListarClientes();
            } else {
                System.out.println("No se modifico");
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }*/

        txidcliente.requestFocus();
        cliagre.requestFocus();
    }//GEN-LAST:event_ModificarActionPerformed

    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
        txidcliente.requestFocus();
    }//GEN-LAST:event_AgregarActionPerformed

    private void depoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depoActionPerformed
        double mon = Double.parseDouble(JOptionPane.showInputDialog("Ingrea la cantidad a depositar"));
        if (mon >= 0) {

            try {

                interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
                transaccion t = new transaccion();

                t.setIdtran(0);

                JOptionPane.showMessageDialog(null, "Se usara la fecha actual");
                Calendar cal = Calendar.getInstance();
                SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");

                t.setFechaTrans(format1.format(cal.getTime()));
                t.setTipoTrans("Deposito");
                int tipo = 0;

                t.setMonto(mon);
                t.setNumcuenta(Integer.parseInt(tablacuentas.getValueAt(tablacuentas.getSelectedRow(), 0).toString()));
               // t.setTipocuenta(cbTipoCueTrans.getSelectedIndex());
                if (obje.AgregarTransa(t, tipo)) {
                    System.out.println("Agregado");
                    ListarTransa();
                    ListarCuentas();
                } else {
                    System.out.println("No se agrego");
                }

            } catch (RemoteException e) {
                System.out.println("Error de invocacion" + e);
            } catch (NotBoundException e) {
                System.out.println("Error de invocacion" + e);
            } catch (MalformedURLException e) {
                System.out.println("Error de invocacion" + e);
            }
        }
    }//GEN-LAST:event_depoActionPerformed

    private void retiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retiActionPerformed
        double mon = Double.parseDouble(JOptionPane.showInputDialog("Ingrea la cantidad a retirar"));
        if (mon >= 0) {

            try {

                interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
                transaccion t = new transaccion();

                t.setIdtran(0);

                JOptionPane.showMessageDialog(null, "Se usara la fecha actual");
                Calendar cal = Calendar.getInstance();
                SimpleDateFormat format1 = new SimpleDateFormat("yyyy-MM-dd");

                t.setFechaTrans(format1.format(cal.getTime()));
                t.setTipoTrans("RETIRO");
                int tipo = 3;

                t.setMonto(mon);
                t.setNumcuenta(Integer.parseInt(tablacuentas.getValueAt(tablacuentas.getSelectedRow(), 0).toString()));
               // t.setTipocuenta(cbTipoCueTrans.getSelectedIndex());
                if (obje.AgregarTransa(t, tipo)) {
                    System.out.println("Agregado");
                    ListarTransa();
                    ListarCuentas();
                } else {
                    System.out.println("No se agrego");
                }

            } catch (RemoteException e) {
                System.out.println("Error de invocacion" + e);
            } catch (NotBoundException e) {
                System.out.println("Error de invocacion" + e);
            } catch (MalformedURLException e) {
                System.out.println("Error de invocacion" + e);
            }
        }
    }//GEN-LAST:event_retiActionPerformed

    private void ListarCuentas() {
        try {
            dtm2.setRowCount(0);
            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            ArrayList<cuenta> lista = obje.ListaCuentas();
            String[] valores = new String[9];
            cuent = new String[3][lista.size()];

            for (int i = 0; i < lista.size(); i++) {
                valores[0] = String.valueOf(lista.get(i).getNumCuenta());
                valores[1] = String.valueOf(lista.get(i).getIdcliente());
                valores[2] = (lista.get(i).getNombreC());
                valores[3] = lista.get(i).getDesC();
                valores[4] = lista.get(i).getFechaCreacion();
                valores[5] = String.valueOf(lista.get(i).getSaldo());
                cuent[0][i] = String.valueOf(lista.get(i).getIdtipocuenta());
                cuent[1][i] = String.valueOf(lista.get(i).getIdcliente());
                cuent[2][i] = String.valueOf(lista.get(i).getNumCuenta());

                dtm2.addRow(valores);
            }
            tablacuentas.setModel(dtm2);
        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }

    private void ListarTransa() {
        try {
            dtm3.setRowCount(0);
            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            ArrayList<transaccion> lista = obje.ListaTransa();
            String[] valores = new String[8];
            for (int i = 0; i < lista.size(); i++) {
                valores[0] = String.valueOf(lista.get(i).getIdclie());
                valores[1] = lista.get(i).getNom();
                valores[2] = String.valueOf(lista.get(i).getIdtran());
                valores[3] = lista.get(i).getFechaTrans();
                valores[4] = lista.get(i).getTipoTrans();
                valores[5] = String.valueOf(lista.get(i).getMonto());
                valores[6] = String.valueOf(lista.get(i).getNumcuenta());
                valores[7] = lista.get(i).getDes();

                dtm3.addRow(valores);
            }
            tablaTransa.setModel(dtm3);
        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }

    private void ListarTransaCuenta() {
        try {
            dtm3.setRowCount(0);
            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            if (!txnumcuentaTrans.getText().equals("")) {
                int nc = Integer.parseInt(txnumcuentaTrans.getText());
                ArrayList<transaccion> lista = obje.consNCTransa(nc);
                String[] valores = new String[9];
                for (int i = 0; i < lista.size(); i++) {
                    valores[0] = String.valueOf(lista.get(i).getIdclie());
                    valores[1] = lista.get(i).getNom();
                    valores[2] = String.valueOf(lista.get(i).getIdtran());
                    valores[3] = lista.get(i).getFechaTrans();
                    valores[4] = lista.get(i).getTipoTrans();
                    valores[5] = String.valueOf(lista.get(i).getMonto());
                    valores[6] = String.valueOf(lista.get(i).getNumcuenta());
                    valores[7] = lista.get(i).getTipoTrans();
                    valores[8] = lista.get(i).getDes();

                    dtm3.addRow(valores);
                }
                tablaTransa.setModel(dtm3);
            }

        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }

    private void ListarClientes() {
        try {
            dtm1.setRowCount(0);
            interfazRemota obje = (interfazRemota) Naming.lookup("rmi://localhost:6060/obje");
            ArrayList<cliente> lista = obje.ListaClientes();
            String[] valores = new String[9];
            for (int i = 0; i < lista.size(); i++) {
                valores[0] = String.valueOf(lista.get(i).getIdcliente());
                valores[1] = lista.get(i).getNom();
                valores[2] = lista.get(i).getApp();
                valores[3] = lista.get(i).getApm();
                valores[4] = lista.get(i).getSex();
                valores[5] = lista.get(i).getDir();
                valores[6] = lista.get(i).getCiudad();
                valores[7] = lista.get(i).getCol();
                valores[8] = lista.get(i).getCorreo();
                dtm1.addRow(valores);
            }
            tablaclientes.setModel(dtm1);
        } catch (RemoteException e) {
            System.out.println("Error de invocacion" + e);
        } catch (NotBoundException e) {
            System.out.println("Error de invocacion" + e);
        } catch (MalformedURLException e) {
            System.out.println("Error de invocacion" + e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(menunu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(menunu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(menunu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(menunu.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new menunu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Agregar;
    private javax.swing.JMenuItem Buscar;
    private javax.swing.JMenu CRUD;
    private javax.swing.JMenuItem CrearCuenta;
    private javax.swing.JMenu Cuentas;
    private javax.swing.JMenuItem Eliminar;
    private javax.swing.JMenuItem Modificar;
    private javax.swing.JComboBox<String> cbTipoCueTrans;
    private javax.swing.JComboBox<String> cbTipoTransacc;
    private javax.swing.JComboBox<String> cbnumcu;
    private javax.swing.JComboBox<String> cbtipocuenta;
    private javax.swing.JButton cliagre;
    private javax.swing.JComboBox<String> csexcli;
    private javax.swing.JMenuItem depo;
    private javax.swing.JTextField fechaex;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblape;
    private javax.swing.JLabel lbldir;
    private javax.swing.JLabel lblnom;
    private javax.swing.JMenuItem reti;
    private javax.swing.JTable tablaTransa;
    private javax.swing.JTable tablaclientes;
    private javax.swing.JTable tablacuentas;
    private javax.swing.JPopupMenu transmenu;
    private javax.swing.JTextField txapmc;
    private javax.swing.JTextField txappc;
    private javax.swing.JTextField txcicli;
    private javax.swing.JTextField txcolc;
    private javax.swing.JTextField txcorc;
    private javax.swing.JTextField txdircli;
    private javax.swing.JTextField txfechaform;
    private javax.swing.JTextField txfetrans;
    private javax.swing.JTextField txidclicuentas;
    private javax.swing.JTextField txidcliente;
    private javax.swing.JTextField txidt;
    private javax.swing.JTextField txidtrans;
    private javax.swing.JTextField txmontran;
    private javax.swing.JTextField txncuenta;
    private javax.swing.JTextField txnomcli;
    private javax.swing.JTextField txnumcuentaTrans;
    private javax.swing.JTextField txsaldo;
    // End of variables declaration//GEN-END:variables
}
